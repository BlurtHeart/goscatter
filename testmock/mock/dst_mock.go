// Code generated by MockGen. DO NOT EDIT.
// Source: src_mock.go

// Package mock_test is a generated GoMock package.
package mock_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTalker is a mock of Talker interface
type MockTalker struct {
	ctrl     *gomock.Controller
	recorder *MockTalkerMockRecorder
}

// MockTalkerMockRecorder is the mock recorder for MockTalker
type MockTalkerMockRecorder struct {
	mock *MockTalker
}

// NewMockTalker creates a new mock instance
func NewMockTalker(ctrl *gomock.Controller) *MockTalker {
	mock := &MockTalker{ctrl: ctrl}
	mock.recorder = &MockTalkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTalker) EXPECT() *MockTalkerMockRecorder {
	return m.recorder
}

// Talk mocks base method
func (m *MockTalker) Talk(p string) string {
	ret := m.ctrl.Call(m, "Talk", p)
	ret0, _ := ret[0].(string)
	return ret0
}

// Talk indicates an expected call of Talk
func (mr *MockTalkerMockRecorder) Talk(p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Talk", reflect.TypeOf((*MockTalker)(nil).Talk), p)
}
